//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace cbrexporter.www.cbr.ru
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("SharpDevelop", "4.0.0.7070-dce2df4c")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RegionInfoServiceSoap", Namespace="http://web.cbr.ru/")]
    public partial class RegionInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        /// <remarks/>
        public RegionInfoService()
        {
            this.Url = "http://www.cbr.ru/RegionWebServ/regional.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/SetDatesRange", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetDatesRange(System.DateTime DtFromDate, System.DateTime DtToDate)
        {
            object[] results = this.Invoke("SetDatesRange", new object[] {
                        DtFromDate,
                        DtToDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDatesRange(System.DateTime DtFromDate, System.DateTime DtToDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SetDatesRange", new object[] {
                        DtFromDate,
                        DtToDate}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndSetDatesRange(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ClearIndicatorsList", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearIndicatorsList()
        {
            object[] results = this.Invoke("ClearIndicatorsList", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClearIndicatorsList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ClearIndicatorsList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndClearIndicatorsList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/AddIndicators", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddIndicators(int Indicator_code)
        {
            object[] results = this.Invoke("AddIndicators", new object[] {
                        Indicator_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddIndicators(int Indicator_code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddIndicators", new object[] {
                        Indicator_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddIndicators(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ClearRegionList", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ClearRegionList()
        {
            object[] results = this.Invoke("ClearRegionList", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClearRegionList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ClearRegionList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndClearRegionList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/AddRegion", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddRegion(int Region_code)
        {
            object[] results = this.Invoke("AddRegion", new object[] {
                        Region_code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddRegion(int Region_code, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddRegion", new object[] {
                        Region_code}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndAddRegion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/IndicatorCodeByName", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int IndicatorCodeByName(string Ind_name, string TableName)
        {
            object[] results = this.Invoke("IndicatorCodeByName", new object[] {
                        Ind_name,
                        TableName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIndicatorCodeByName(string Ind_name, string TableName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IndicatorCodeByName", new object[] {
                        Ind_name,
                        TableName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndIndicatorCodeByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/IndicatorsList", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet IndicatorsList(string IND_table)
        {
            object[] results = this.Invoke("IndicatorsList", new object[] {
                        IND_table});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginIndicatorsList(string IND_table, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("IndicatorsList", new object[] {
                        IND_table}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndIndicatorsList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/TablesList", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet TablesList()
        {
            object[] results = this.Invoke("TablesList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginTablesList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("TablesList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndTablesList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RegionsList", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet RegionsList()
        {
            object[] results = this.Invoke("RegionsList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegionsList(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RegionsList", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndRegionsList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RegionCodeByName", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RegionCodeByName(string Region_name)
        {
            object[] results = this.Invoke("RegionCodeByName", new object[] {
                        Region_name});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegionCodeByName(string Region_name, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RegionCodeByName", new object[] {
                        Region_name}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndRegionCodeByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GET_Error", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GET_Error()
        {
            object[] results = this.Invoke("GET_Error", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGET_Error(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GET_Error", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGET_Error(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/Close", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Close()
        {
            object[] results = this.Invoke("Close", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginClose(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Close", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndClose(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/OpenDataBase", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool OpenDataBase()
        {
            object[] results = this.Invoke("OpenDataBase", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginOpenDataBase(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("OpenDataBase", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndOpenDataBase(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/GetRawRegionData", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRawRegionData()
        {
            object[] results = this.Invoke("GetRawRegionData", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRawRegionData(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRawRegionData", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRawRegionData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/RetIndicatorDim", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RetIndicatorDim(int id)
        {
            object[] results = this.Invoke("RetIndicatorDim", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRetIndicatorDim(int id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RetIndicatorDim", new object[] {
                        id}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRetIndicatorDim(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/swToEnglish", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool swToEnglish(bool swToE)
        {
            object[] results = this.Invoke("swToEnglish", new object[] {
                        swToE});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginswToEnglish(bool swToE, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("swToEnglish", new object[] {
                        swToE}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndswToEnglish(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://web.cbr.ru/ExecASXMLDocument", RequestNamespace="http://web.cbr.ru/", ResponseNamespace="http://web.cbr.ru/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ExecASXMLDocument(int Y1, int Y2, int Ind_id)
        {
            object[] results = this.Invoke("ExecASXMLDocument", new object[] {
                        Y1,
                        Y2,
                        Ind_id});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExecASXMLDocument(int Y1, int Y2, int Ind_id, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ExecASXMLDocument", new object[] {
                        Y1,
                        Y2,
                        Ind_id}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Xml.XmlNode EndExecASXMLDocument(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Xml.XmlNode)(results[0]));
        }
    }
}
